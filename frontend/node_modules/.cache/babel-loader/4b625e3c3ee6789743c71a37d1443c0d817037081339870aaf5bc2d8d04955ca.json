{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log('API Request:', config);\n  return config;\n});\n\n// Add response interceptor for debugging\napi.interceptors.response.use(response => {\n  console.log('API Response:', response);\n  return response;\n}, error => {\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\n\n// Create a BNPL plan\nexport const createPlan = async planData => {\n  const response = await api.post('/plans/', planData);\n  return response.data;\n};\n\n// Get plans for the user or merchant\nexport const getPlans = async () => {\n  const response = await api.get('/plans/');\n  return response.data;\n};\n\n// Get analytics data (merchant only)\nexport const getAnalytics = async () => {\n  const response = await api.get('/analytics/');\n  return response.data;\n};\n\n// Simulate a payment for an installment\nexport const payInstallment = async installmentId => {\n  const response = await api.post(`/installments/${installmentId}/pay/`);\n  return response.data;\n};\n\n// Login user or merchant\nexport const login = async (email, password) => {\n  console.log('Making login request to:', `${API_URL}/login/`);\n  const response = await api.post('/login/', {\n    email,\n    password\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","console","log","response","error","Promise","reject","createPlan","planData","post","data","getPlans","get","getAnalytics","payInstallment","installmentId","login","email","password"],"sources":["/media/mohamed/work/bnpl-dashboard/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:8000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    console.log('API Request:', config);\n    return config;\n});\n\n// Add response interceptor for debugging\napi.interceptors.response.use(\n    (response) => {\n        console.log('API Response:', response);\n        return response;\n    },\n    (error) => {\n        console.error('API Error:', error);\n        return Promise.reject(error);\n    }\n);\n\n// Create a BNPL plan\nexport const createPlan = async (planData) => {\n    const response = await api.post('/plans/', planData);\n    return response.data;\n};\n\n// Get plans for the user or merchant\nexport const getPlans = async () => {\n    const response = await api.get('/plans/');\n    return response.data;\n};\n\n// Get analytics data (merchant only)\nexport const getAnalytics = async () => {\n    const response = await api.get('/analytics/');\n    return response.data;\n};\n\n// Simulate a payment for an installment\nexport const payInstallment = async (installmentId) => {\n    const response = await api.post(`/installments/${installmentId}/pay/`);\n    return response.data;\n};\n\n// Login user or merchant\nexport const login = async (email, password) => {\n    console.log('Making login request to:', `${API_URL}/login/`);\n    const response = await api.post('/login/', {\n        email,\n        password,\n    });\n    return response.data;\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACAI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEN,MAAM,CAAC;EACnC,OAAOA,MAAM;AACjB,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CACxBQ,QAAQ,IAAK;EACVF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAAC;EACtC,OAAOA,QAAQ;AACnB,CAAC,EACAC,KAAK,IAAK;EACPH,OAAO,CAACG,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC1C,MAAML,QAAQ,GAAG,MAAMd,GAAG,CAACoB,IAAI,CAAC,SAAS,EAAED,QAAQ,CAAC;EACpD,OAAOL,QAAQ,CAACO,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMR,QAAQ,GAAG,MAAMd,GAAG,CAACuB,GAAG,CAAC,SAAS,CAAC;EACzC,OAAOT,QAAQ,CAACO,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMV,QAAQ,GAAG,MAAMd,GAAG,CAACuB,GAAG,CAAC,aAAa,CAAC;EAC7C,OAAOT,QAAQ,CAACO,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAG,MAAOC,aAAa,IAAK;EACnD,MAAMZ,QAAQ,GAAG,MAAMd,GAAG,CAACoB,IAAI,CAAC,iBAAiBM,aAAa,OAAO,CAAC;EACtE,OAAOZ,QAAQ,CAACO,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMM,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC5CjB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,GAAGd,OAAO,SAAS,CAAC;EAC5D,MAAMe,QAAQ,GAAG,MAAMd,GAAG,CAACoB,IAAI,CAAC,SAAS,EAAE;IACvCQ,KAAK;IACLC;EACJ,CAAC,CAAC;EACF,OAAOf,QAAQ,CAACO,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}