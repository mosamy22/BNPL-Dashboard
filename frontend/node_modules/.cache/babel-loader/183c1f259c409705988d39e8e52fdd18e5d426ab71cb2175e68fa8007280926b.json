{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Create a BNPL plan\nexport const createPlan = async planData => {\n  try {\n    const response = await api.post('/plans/', planData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Get plans for the user or merchant\nexport const getPlans = async () => {\n  try {\n    const response = await api.get('/plans/');\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Get analytics data (merchant only)\nexport const getAnalytics = async () => {\n  try {\n    const response = await api.get('/analytics/');\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Simulate a payment for an installment\nexport const payInstallment = async installmentId => {\n  try {\n    const response = await api.post(`/installments/${installmentId}/pay/`);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Login user or merchant\nexport const login = async (email, password, isMerchant) => {\n  try {\n    const response = await api.post('/login/', {\n      email,\n      password,\n      is_merchant: isMerchant\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","createPlan","planData","response","post","data","error","getPlans","get","getAnalytics","payInstallment","installmentId","login","email","password","isMerchant","is_merchant"],"sources":["/media/mohamed/work/bnpl-dashboard/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:8000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\n// Create a BNPL plan\nexport const createPlan = async (planData) => {\n    try {\n        const response = await api.post('/plans/', planData);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n// Get plans for the user or merchant\nexport const getPlans = async () => {\n    try {\n        const response = await api.get('/plans/');\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n// Get analytics data (merchant only)\nexport const getAnalytics = async () => {\n    try {\n        const response = await api.get('/analytics/');\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n// Simulate a payment for an installment\nexport const payInstallment = async (installmentId) => {\n    try {\n        const response = await api.post(`/installments/${installmentId}/pay/`);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\n// Login user or merchant\nexport const login = async (email, password, isMerchant) => {\n    try {\n        const response = await api.post('/login/', {\n            email,\n            password,\n            is_merchant: isMerchant\n        });\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,SAAS,EAAEF,QAAQ,CAAC;IACpD,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACA,MAAMJ,QAAQ,GAAG,MAAMd,GAAG,CAACmB,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMd,GAAG,CAACmB,GAAG,CAAC,aAAa,CAAC;IAC7C,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,cAAc,GAAG,MAAOC,aAAa,IAAK;EACnD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,iBAAiBO,aAAa,OAAO,CAAC;IACtE,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,KAAK;EACxD,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,SAAS,EAAE;MACvCS,KAAK;MACLC,QAAQ;MACRE,WAAW,EAAED;IACjB,CAAC,CAAC;IACF,OAAOZ,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}