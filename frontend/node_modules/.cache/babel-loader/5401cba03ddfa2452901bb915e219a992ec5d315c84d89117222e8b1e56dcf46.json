{"ast":null,"code":"var _jsxFileName = \"/media/mohamed/work/bnpl-dashboard/frontend/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getPlans } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isMerchant, setIsMerchant] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const validateToken = async () => {\n      const token = localStorage.getItem('token');\n      const merchantStatus = localStorage.getItem('isMerchant') === 'true';\n      if (token) {\n        try {\n          // Try to make an authenticated request to validate the token\n          await getPlans();\n          setIsAuthenticated(true);\n          setIsMerchant(merchantStatus);\n        } catch (error) {\n          // If the request fails, clear the invalid token\n          localStorage.removeItem('token');\n          localStorage.removeItem('isMerchant');\n          setIsAuthenticated(false);\n          setIsMerchant(false);\n          navigate('/login');\n        }\n      } else {\n        setIsAuthenticated(false);\n        setIsMerchant(false);\n      }\n      setIsLoading(false);\n    };\n    validateToken();\n  }, [navigate]);\n  const login = (token, isMerchantStatus) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('isMerchant', isMerchantStatus);\n    setIsAuthenticated(true);\n    setIsMerchant(isMerchantStatus);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('isMerchant');\n    setIsAuthenticated(false);\n    setIsMerchant(false);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      isMerchant,\n      isLoading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"c9Cc+CkodTrBMnMNPcpV2cBKrB8=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","getPlans","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","isMerchant","setIsMerchant","isLoading","setIsLoading","navigate","validateToken","token","localStorage","getItem","merchantStatus","error","removeItem","login","isMerchantStatus","setItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/media/mohamed/work/bnpl-dashboard/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getPlans } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isMerchant, setIsMerchant] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const validateToken = async () => {\n            const token = localStorage.getItem('token');\n            const merchantStatus = localStorage.getItem('isMerchant') === 'true';\n            \n            if (token) {\n                try {\n                    // Try to make an authenticated request to validate the token\n                    await getPlans();\n                    setIsAuthenticated(true);\n                    setIsMerchant(merchantStatus);\n                } catch (error) {\n                    // If the request fails, clear the invalid token\n                    localStorage.removeItem('token');\n                    localStorage.removeItem('isMerchant');\n                    setIsAuthenticated(false);\n                    setIsMerchant(false);\n                    navigate('/login');\n                }\n            } else {\n                setIsAuthenticated(false);\n                setIsMerchant(false);\n            }\n            setIsLoading(false);\n        };\n\n        validateToken();\n    }, [navigate]);\n\n    const login = (token, isMerchantStatus) => {\n        localStorage.setItem('token', token);\n        localStorage.setItem('isMerchant', isMerchantStatus);\n        setIsAuthenticated(true);\n        setIsMerchant(isMerchantStatus);\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('isMerchant');\n        setIsAuthenticated(false);\n        setIsMerchant(false);\n        navigate('/login');\n    };\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, isMerchant, isLoading, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}